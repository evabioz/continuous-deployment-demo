# Use Dockerized infrastructure
sudo: false
language: php

# Cache our Gcloud SDK between commands
cache:
  directories:
  - "$HOME/google-cloud-sdk"
  - "$HOME/.composer/cache"

env:
  global:
# Make sure gcloud command is on our PATH and the App Engine SDK is in the Python path
    - PATH=$PATH:${HOME}/google-cloud-sdk/bin:$HOME/.composer/vender/bin
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - COMPOSER_ARGS="--no-interaction --ignore-platform-reqs"

matrix:
  fast_finish: true
  include:
    - php: 7

before_install:
# [START auth]
# Decrypt the credentials we added to the repo using the key we added with the Travis command line tool
  - openssl aes-256-cbc -K $encrypted_a882d733c960_key -iv $encrypted_a882d733c960_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
# If the SDK is not already cached, download it and unpack it
  - if [ ! -f ${HOME}/google-cloud-sdk/bin/gcloud ]; then
       curl https://sdk.cloud.google.com | bash;
    fi
  - tar -xzf credentials.tar.gz
  - mkdir -p lib
# Here we use the decrypted service account credentials to authenticate the command line tool
  - gcloud auth activate-service-account --key-file client-secret.json
# [END auth]

install:
# Set the correct project to deploy to
  - gcloud config set project ${GOOGLE_PROJECT_ID}
# Initizel Laravel project
  - travis_retry composer install --no-progress --prefer-dist
  - travis_retry composer global require "laravel/envoy=~1.0"

#script:
# Run the unit tests
# - before_action.sh
# [START deploy]
# Deploy the app
#- gcloud -q preview app deploy app.yaml --promote
# Run and end to end test
#- after_action.sh
# [END deploy]